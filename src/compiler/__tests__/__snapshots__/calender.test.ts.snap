// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`query for Connection 1`] = `
"function extractId(obj) {
  const spec = Automation.getDisplayString(obj);
  if (spec === undefined) {
    return null;
  }
  let inStr = false;
  let ret = \\"\\";
  let nextEscape = null;
  for (let i = 0; i < spec.length; i++) {
    const c = spec[i];
    const inEscape = nextEscape === i;
    if (c === \\"\\\\\\\\\\") {
      nextEscape = i + 1;
      continue;
    }
    if (!inEscape && c === '\\"') {
      inStr = !inStr;
      continue;
    }
    if (!inStr) {
      if (c === \\"(\\") {
        ret = \\"\\";
        continue;
      }
      if (c === \\")\\") {
        continue;
      }
    }
    ret = \`\${ret}\${c}\`;
  }
  return ret !== \\"\\" ? ret : null;
}
function paginate(nodes, { first, after }, getId) {
  const afterIndex =
    after === undefined
      ? undefined
      : nodes.findIndex((n) => getId(n) === after);
  if (afterIndex === -1) {
    return [];
  }
  const start = afterIndex === undefined ? 0 : afterIndex + 1;
  const end = first !== undefined ? start + first : undefined;
  return nodes.slice(start, end);
}
const app = Application(\\"Calendar\\");
JSON.stringify({
  result: {
    calendars: (() => {
      const allNodes = app.calendars.whose({ writable: { _equals: true } })();
      const nodes = paginate(allNodes, { first: 3 }, extractId);
      return {
        edges: nodes.map((elm) => {
          return { node: { name: elm.name() } };
        }),
      };
    })(),
  },
});
"
`;
